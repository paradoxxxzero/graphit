(function(){"use strict";const U=["line","dot","point","cross"],F=["sine","expsine","square","smoothsquare","sawtooth","triangle","noise","spiky","shark","squarecircle","circle","wave"];var st={sound:{adsr:"adsr usage: (t, attack = 0.2, decay = 0.1, sustain = 0.4, release = 0.3, sustainLevel = 0.5, duration = <sound duration>)",osc:`osc usage: (t, freq, type = ${F.join("|")}, ...param)`,oscs:`oscs usage: (t, freqs, type = ${F.join("|")}, ...param)`,...Object.fromEntries(F.map(e=>[e,`${e} usage: (t, freq, ...param)`])),oscEase:"oscEase usage: (t, freq, from, to, easing, ...param)",transform:"transform usage: (t, freq, type)",lowpass:"lowpass usage: (t, input, cutoff)",lowpass4:"lowpass usage: (t, input, cutoff)",highpass:"highpass usage: (t, input, cutoff)",bandpass:"bandpass usage: (t, input, cutoff, bandwidth)",bandstop:"bandstop usage: (t, input, cutoff, bandwidth)",pulse:"pulse usage: ()",peak:"peak usage: (t, freq, amplitude=1)",band:"band usage: (t, freqMin, freqMax, amplitude=1)",normalize:"normalize usage: (input, cap = Infinity, avg: true)",fft:"fft usage: (input)",ifft:"ifft usage (input)",segment:"segment usage: (t, ...pairs)",at:"at usage: (d, f, t)"},math:{abs:"Returns the absolute value of x.",acos:"Returns the arccosine of x.",acosh:"Returns the hyperbolic arccosine of x.",asin:"Returns the arcsine of x.",asinh:"Returns the hyperbolic arcsine of a number.",atan:"Returns the arctangent of x.",atanh:"Returns the hyperbolic arctangent of x.",atan2:"Returns the arctangent of the quotient of its arguments.",cbrt:"Returns the cube root of x.",ceil:"Returns the smallest integer greater than or equal to x.",clz32:"Returns the number of leading zero bits of the 32-bit integer x.",cos:"Returns the cosine of x.",cosh:"Returns the hyperbolic cosine of x.",exp:"Returns ex, where x is the argument, and e is Euler's constant (2.718…, the base of the natural logarithm).",expm1:"Returns subtracting 1 from exp(x).",floor:"Returns the largest integer less than or equal to x.",fround:"Returns the nearest single precision float representation of x.",hypot:"Returns the square root of the sum of squares of its arguments.",imul:"Returns the result of the 32-bit integer multiplication of x and y.",ln:"Returns the natural logarithm (㏒e; also, ㏑) of x.",log:"Returns the natural logarithm (㏒e; also, ㏑) of x.",log1p:"Returns the natural logarithm (㏒e; also ㏑) of 1 + x for the number x.",log10:"Returns the base-10 logarithm of x.",log2:"Returns the base-2 logarithm of x.",max:"Returns the largest of zero or more numbers.",min:"Returns the smallest of zero or more numbers.",pow:"Returns base x to the exponent power y (that is, xy).",random:"Returns a pseudo-random number between 0 and 1.",round:"Returns the value of the number x rounded to the nearest integer.",sign:"Returns the sign of the x, indicating whether x is positive, negative, or zero.",sin:"Returns the sine of x.",sinh:"Returns the hyperbolic sine of x.",sqrt:"Returns the positive square root of x.",tan:"Returns the tangent of x.",tanh:"Returns the hyperbolic tangent of x.",trunc:"Returns the integer portion of x, removing any fractional digits."},constant:{e:"Euler's constant and the base of natural logarithms; approximately 2.718.",ln2:"Natural logarithm of 2; approximately 0.693.",ln10:"Natural logarithm of 10; approximately 2.303.",log2e:"Base-2 logarithm of E; approximately 1.443.",log10e:"Base-10 logarithm of E; approximately 0.434.",pi:"Ratio of a circle's circumference to its diameter; approximately 3.14159.",sqrt1_2:"Square root of ½; approximately 0.707.",sqrt2:"Square root of 2; approximately 1.414."},util:{lerp:"lerp usage: (x, y, a)",clamp:"clamp usage: (x, min, max)"},graphit:{"@size":"Plot each pixel","@adaptative":"Adaptative plot","@auto":"Better adaptative plot","@fft":"FFT plot","@ifft":"IFFT plot","@!":"Precision","@$cubic":"Cubic interpolation","@$quadratic":"Quadratic interpolation","@$lagrange":"Lagrange interpolation","@$linear":"Linear interpolation","@$trigonometric":"Trigonometric interpolation","@/dot":"Dot plot mode","@/point":"Point plot mode","@/cross":"Cross plot mode","@/line":"Line plot mode","@ ":"@ x0 -> x1 : Plot range [x0;x1]"}};function et(e,s,t){return(1-t)*e+t*s}function nt(e,s,t){return Math.max(s,Math.min(t,e))}const $=e=>e&e-1?2**(Math.log2(e)+1|0):e,K=(e,s)=>{const t=~~(e.length-1),n=new Array(t+1),i=new Array(t+1),f=new Array(t+1).fill(0),r=new Array(t+1).fill(0),o=new Array(t+1).fill(0),c=new Array(t+1).fill(0),p=new Array(t+1).fill(0),u=new Array(t),a=new Array(t),h=new Array(t);for(let l=0;l<t+1;l++)n[l]=e[l][0],i[l]=e[l][1];for(let l=0;l<t;l++)u[l]=n[l+1]-n[l],a[l]=i[l+1]-i[l],h[l]=u[l]!==0?a[l]/u[l]:1;for(let l=1;l<t;l++){const w=n[l+1]-n[l-1]!==0?1/(2*(n[l+1]-n[l-1])-u[l-1]*c[l-1]):0;c[l]=u[l]*w,p[l]=(3*(h[l]-h[l-1])-u[l-1]*p[l-1])*w}for(let l=t-1;l>=0;l--)u[l]!==0&&(r[l]=p[l]-c[l]*r[l+1],f[l]=h[l]-u[l]*(r[l+1]+2*r[l])/3,o[l]=(r[l+1]-r[l])/(3*u[l]));const M=[];for(let l=0;l<t;l++)if(M.push(n[l],i[l]),u[l]!==0)for(let w=1;w<s;w++){const O=w*u[l]/s;M.push(n[l]+O,i[l]+O*(f[l]+O*(r[l]+O*o[l])))}return M},rt=(e,s)=>{const t=~~(e.length-1),n=new Array(t+1),i=new Array(t+1),f=new Array(t+1).fill(0),r=new Array(t+1).fill(0),o=new Array(t),c=new Array(t),p=new Array(t);for(let a=0;a<t+1;a++)n[a]=e[a][0],i[a]=e[a][1];for(let a=0;a<t;a++)o[a]=n[a+1]-n[a],c[a]=i[a+1]-i[a],p[a]=o[a]!==0?c[a]/o[a]:1;for(let a=1;a<t;a++)f[a]=2*p[a-1]-f[a-1];for(let a=0;a<t;a++)r[a]=o[a]!==0?(p[a]-f[a])/o[a]:0;const u=[];for(let a=0;a<t;a++)if(u.push(n[a],i[a]),o[a]!==0)for(let h=1;h<s;h++){const M=h*o[a]/s;u.push(n[a]+M,i[a]+M*(f[a]+M*r[a]))}return u},ot=(e,s)=>{const t=~~(e.length-1),n=new Array(t+1),i=new Array(t+1),f=new Array(t),r=[];for(let o=0;o<t+1;o++)n[o]=e[o][0],i[o]=e[o][1];for(let o=0;o<t;o++)f[o]=n[o+1]-n[o];for(let o=0;o<t;o++)if(r.push(n[o],i[o]),f[o]!==0)for(let c=1;c<s;c++){const p=n[o]+c*f[o]/s;let u=0;for(let a=0;a<t+1;a++){let h=1;for(let M=0;M<t+1;M++)a!==M&&n[a]!==n[M]&&(h*=(p-n[M])/(n[a]-n[M]));u+=i[a]*h}r.push(p,u)}return r},it=(e,s)=>{const t=~~(e.length-1),n=new Array(t+1),i=new Array(t+1),f=new Array(t),r=[];for(let o=0;o<t+1;o++)n[o]=e[o][0],i[o]=e[o][1];for(let o=0;o<t;o++)f[o]=n[o+1]-n[o];for(let o=0;o<t;o++)if(r.push(n[o],i[o]),f[o]!==0)for(let c=1;c<s;c++){const p=n[o]+c*f[o]/s;let u=0;for(let a=0;a<t+1;a++){let h=1;for(let M=0;M<t+1;M++)a!==M&&Math.sin(.5*(n[a]-n[M])!==0)&&(h*=Math.sin(.5*(p-n[M]))/Math.sin(.5*(n[a]-n[M])));u+=i[a]*h}r.push(p,u)}return r},Y=e=>{switch(e){case"cubic":return K;case"quadratic":return rt;case"lagrange":return ot;case"trigonometric":return it;default:return K}},at=(e,s,t)=>et(e,s,t),ft=(e,s,t)=>(t=nt(t,0,1),t=(Math.sin(t*Math.PI*(.2+2.5*t*t*t))*Math.pow(1-t,2.2)+t)*(1+1.2*(1-t)),e+(s-e)*t),ct=(e,s,t)=>(s-=e,s*t*t+e),lt=(e,s,t)=>(s-=e,-s*t*(t-2)+e),ht=(e,s,t)=>(t/=.5,s-=e,t<1?s*.5*t*t+e:(t--,-s*.5*(t*(t-2)-1)+e)),ut=(e,s,t)=>(s-=e,s*t*t*t+e),pt=(e,s,t)=>(t--,s-=e,s*(t*t*t+1)+e),gt=(e,s,t)=>(t/=.5,s-=e,t<1?s*.5*t*t*t+e:(t-=2,s*.5*(t*t*t+2)+e)),Mt=(e,s,t)=>(s-=e,s*t*t*t*t+e),mt=(e,s,t)=>(t--,s-=e,-s*(t*t*t*t-1)+e),wt=(e,s,t)=>(t/=.5,s-=e,t<1?s*.5*t*t*t*t+e:(t-=2,-s*.5*(t*t*t*t-2)+e)),It=(e,s,t)=>(s-=e,s*t*t*t*t*t+e),xt=(e,s,t)=>(t--,s-=e,s*(t*t*t*t*t+1)+e),_t=(e,s,t)=>(t/=.5,s-=e,t<1?s*.5*t*t*t*t*t+e:(t-=2,s*.5*(t*t*t*t*t+2)+e)),bt=(e,s,t)=>(s-=e,-s*Math.cos(t*(Math.PI*.5))+s+e),Ot=(e,s,t)=>(s-=e,s*Math.sin(t*(Math.PI*.5))+e),Pt=(e,s,t)=>(s-=e,-s*.5*(Math.cos(Math.PI*t)-1)+e),Nt=(e,s,t)=>(s-=e,s*Math.pow(2,10*(t-1))+e),Dt=(e,s,t)=>(s-=e,s*(-Math.pow(2,-10*t)+1)+e),yt=(e,s,t)=>(t/=.5,s-=e,t<1?s*.5*Math.pow(2,10*(t-1))+e:(t--,s*.5*(-Math.pow(2,-10*t)+2)+e)),Et=(e,s,t)=>(s-=e,-s*(Math.sqrt(1-t*t)-1)+e),At=(e,s,t)=>(t--,s-=e,s*Math.sqrt(1-t*t)+e),Rt=(e,s,t)=>(t/=.5,s-=e,t<1?-s*.5*(Math.sqrt(1-t*t)-1)+e:(t-=2,s*.5*(Math.sqrt(1-t*t)+1)+e)),V=(e,s,t)=>(s-=e,s-j(0,s,1-t)+e),j=(e,s,t)=>(t/=1,s-=e,t<1/2.75?s*(7.5625*t*t)+e:t<2/2.75?(t-=1.5/2.75,s*(7.5625*t*t+.75)+e):t<2.5/2.75?(t-=2.25/2.75,s*(7.5625*t*t+.9375)+e):(t-=2.625/2.75,s*(7.5625*t*t+.984375)+e)),kt=(e,s,t)=>{s-=e;const n=1;return t<n*.5?V(0,s,t*2)*.5+e:j(0,s,t*2-n)*.5+s*.5+e},Qt=(e,s,t)=>{s-=e,t/=1;let n=1.70158;return s*t*t*((n+1)*t-n)+e},zt=(e,s,t)=>{let n=1.70158;return s-=e,t=t-1,s*(t*t*((n+1)*t+n)+1)+e},qt=(e,s,t)=>{let n=1.70158;return s-=e,t/=.5,t<1?(n*=1.525,s*.5*(t*t*((n+1)*t-n))+e):(t-=2,n*=1.525,s*.5*(t*t*((n+1)*t+n)+2)+e)},Bt=(e,s,t)=>{s-=e;let n=1,i=n*.3,f,r=0;return t==0?e:(t/=n)==1?e+s:(r==0||r<Math.abs(s)?(r=s,f=i/4):f=i/(2*Math.PI)*Math.asin(s/r),-(r*Math.pow(2,10*(t-=1))*Math.sin((t*n-f)*(2*Math.PI)/i))+e)},Ct=(e,s,t)=>{s-=e;let n=1,i=n*.3,f,r=0;return t==0?e:(t/=n)==1?e+s:(r==0||r<Math.abs(s)?(r=s,f=i*.25):f=i/(2*Math.PI)*Math.asin(s/r),r*Math.pow(2,-10*t)*Math.sin((t*n-f)*(2*Math.PI)/i)+s+e)},Ft=(e,s,t)=>{s-=e;let n=1,i=n*.3,f,r=0;return t==0?e:(t/=n*.5)==2?e+s:(r==0||r<Math.abs(s)?(r=s,f=i/4):f=i/(2*Math.PI)*Math.asin(s/r),t<1?-.5*(r*Math.pow(2,10*(t-=1))*Math.sin((t*n-f)*(2*Math.PI)/i))+e:r*Math.pow(2,-10*(t-=1))*Math.sin((t*n-f)*(2*Math.PI)/i)*.5+s+e)},$t=(e,s)=>s-e,dt=(e,s,t)=>2*(s-e)*t,jt=(e,s,t)=>(s-=e,-s*t-s*(t-2)),St=(e,s,t)=>(t/=.5,s-=e,t<1?s*t:(t--,s*(1-t))),Tt=(e,s,t)=>3*(s-e)*t*t,Lt=(e,s,t)=>(t--,s-=e,3*s*t*t),Gt=(e,s,t)=>(t/=.5,s-=e,t<1||(t-=2),3/2*s*t*t),Ut=(e,s,t)=>4*(s-e)*t*t*t,Kt=(e,s,t)=>(t--,s-=e,-4*s*t*t*t),Yt=(e,s,t)=>(t/=.5,s-=e,t<1?2*s*t*t*t:(t-=2,-2*s*t*t*t)),Vt=(e,s,t)=>5*(s-e)*t*t*t*t,Xt=(e,s,t)=>(t--,s-=e,5*s*t*t*t*t),Ht=(e,s,t)=>(t/=.5,s-=e,t<1||(t-=2),5/2*s*t*t*t*t),Jt=(e,s,t)=>(s-e)*.5*Math.PI*Math.sin(.5*Math.PI*t),Wt=(e,s,t)=>(s-=e,Math.PI*.5*s*Math.cos(t*(Math.PI*.5))),Zt=(e,s,t)=>(s-=e,s*.5*Math.PI*Math.sin(Math.PI*t)),vt=(e,s,t)=>10*Math.LN2*(s-e)*Math.pow(2,10*(t-1)),ts=(e,s,t)=>(s-=e,5*Math.LN2*s*Math.pow(2,1-10*t)),ss=(e,s,t)=>(t/=.5,s-=e,t<1?5*Math.LN2*s*Math.pow(2,10*(t-1)):(t--,5*Math.LN2*s/Math.pow(2,10*t))),es=(e,s,t)=>(s-e)*t/Math.sqrt(1-t*t),ns=(e,s,t)=>(t--,s-=e,-s*t/Math.sqrt(1-t*t)),rs=(e,s,t)=>(t/=.5,s-=e,t<1?s*t/(2*Math.sqrt(1-t*t)):(t-=2,-s*t/(2*Math.sqrt(1-t*t)))),X=(e,s,t)=>(s-=e,S(0,s,1-t)),S=(e,s,t)=>(t/=1,s-=e,t<1/2.75?2*s*7.5625*t:t<2/2.75?(t-=1.5/2.75,2*s*7.5625*t):t<2.5/2.75?(t-=2.25/2.75,2*s*7.5625*t):(t-=2.625/2.75,2*s*7.5625*t)),os=(e,s,t)=>{s-=e;const n=1;return t<n*.5?X(0,s,t*2)*.5:S(0,s,t*2-n)*.5},is=(e,s,t)=>{let n=1.70158;return 3*(n+1)*(s-e)*t*t-2*n*(s-e)*t},as=(e,s,t)=>{let n=1.70158;return s-=e,t=t-1,s*((n+1)*t*t+2*t*((n+1)*t+n))},fs=(e,s,t)=>{let n=1.70158;return s-=e,t/=.5,t<1?(n*=1.525,.5*s*(n+1)*t*t+s*t*((n+1)*t-n)):(t-=2,n*=1.525,.5*s*((n+1)*t*t+2*t*((n+1)*t+n)))},cs=(e,s,t)=>H(e,s,1-t),H=(e,s,t)=>{s-=e;let n=1,i=n*.3,f,r=0;return r==0||r<Math.abs(s)?(r=s,f=i*.25):f=i/(2*Math.PI)*Math.asin(s/r),r*Math.PI*n*Math.pow(2,1-10*t)*Math.cos(2*Math.PI*(n*t-f)/i)/i-5*Math.LN2*r*Math.pow(2,1-10*t)*Math.sin(2*Math.PI*(n*t-f)/i)};var J=Object.freeze({__proto__:null,linear:at,spring:ft,easeInQuad:ct,easeOutQuad:lt,easeInOutQuad:ht,easeInCubic:ut,easeOutCubic:pt,easeInOutCubic:gt,easeInQuart:Mt,easeOutQuart:mt,easeInOutQuart:wt,easeInQuint:It,easeOutQuint:xt,easeInOutQuint:_t,easeInSine:bt,easeOutSine:Ot,easeInOutSine:Pt,easeInExpo:Nt,easeOutExpo:Dt,easeInOutExpo:yt,easeInCirc:Et,easeOutCirc:At,easeInOutCirc:Rt,easeInBounce:V,easeOutBounce:j,easeInOutBounce:kt,easeInBack:Qt,easeOutBack:zt,easeInOutBack:qt,easeInElastic:Bt,easeOutElastic:Ct,easeInOutElastic:Ft,linearD:$t,easeInQuadD:dt,easeOutQuadD:jt,easeInOutQuadD:St,easeInCubicD:Tt,easeOutCubicD:Lt,easeInOutCubicD:Gt,easeInQuartD:Ut,easeOutQuartD:Kt,easeInOutQuartD:Yt,easeInQuintD:Vt,easeOutQuintD:Xt,easeInOutQuintD:Ht,easeInSineD:Jt,easeOutSineD:Wt,easeInOutSineD:Zt,easeInExpoD:vt,easeOutExpoD:ts,easeInOutExpoD:ss,easeInCircD:es,easeOutCircD:ns,easeInOutCircD:rs,easeInBounceD:X,easeOutBounceD:S,easeInOutBounceD:os,easeInBackD:is,easeOutBackD:as,easeInOutBackD:fs,easeInElasticD:cs,easeOutElasticD:H,easeInOutElasticD:(e,s,t)=>{s-=e;let n=1,i=n*.3,f,r=0;return r==0||r<Math.abs(s)?(r=s,f=i/4):f=i/(2*Math.PI)*Math.asin(s/r),t<1?(t-=1,-5*Math.LN2*r*Math.pow(2,10*t)*Math.sin(2*Math.PI*(n*t-2)/i)-r*Math.PI*n*Math.pow(2,10*t)*Math.cos(2*Math.PI*(n*t-f)/i)/i):(t-=1,r*Math.PI*n*Math.cos(2*Math.PI*(n*t-f)/i)/(i*Math.pow(2,10*t))-5*Math.LN2*r*Math.sin(2*Math.PI*(n*t-f)/i)/Math.pow(2,10*t))},springD:(e,s,t)=>(t=Math.Clamp01(t),s-=e,s*(6*(1-t)/5+1)*(-2.2*Math.pow(1-t,1.2)*Math.sin(Math.PI*t*(2.5*t*t*t+.2))+Math.pow(1-t,2.2)*(Math.PI*(2.5*t*t*t+.2)+7.5*Math.PI*t*t*t)*Math.cos(Math.PI*t*(2.5*t*t*t+.2))+1)-6*s*(Math.pow(1-t,2.2)*Math.sin(Math.PI*t*(2.5*t*t*t+.2))+t/5))});const ls={linear:"x","linear-horizontal":"y",polar:"o",parametric:"t",sound:"t",fft:"t",list:""};self.lerp=(e,s,t)=>e+(s-e)*t,self.clamp=(e,s,t)=>Math.min(Math.max(e,s),t);for(let e of Array.from(Object.getOwnPropertyNames(Math)))self[e.toLowerCase()]=self[e]=Math[e];const T=self.PI,z=self.tau=self.TAU=T*2;self.eta=self.ETA=T/2,self.ln=self.log,self.easings=J,self.osc=(e,s,t="sine",n)=>{if(s===0)return 0;const i=++self._state.call;if(self._state.n<0)return 0;self._state.fs[i]||(self._state.fs[i]={f:0,last_x:0});const f=self._state.fs[i],r=e-f.last_x;f.last_x=e;const o=f.f+=self.clamp(s,0,22050)*r,c=o%1,p=(o+.25)%1,u=4*(p>.5?1-p:p)-1;switch(t){case"sine":return Math.sin(o*z);case"expsine":return Math.pow(Math.sin(o*z),n*2+1);case"square":return Math.sign(Math.sin(o*z));case"smoothsquare":return Math.tanh(Math.sin(o*z)/n);case"sawtooth":return c*2-1;case"triangle":return Math.abs(c*4-2)-1;case"noise":return Math.random()*2-1;case"spiky":return Math.tan(1.5*u)/Math.tan(1.5);case"shark":return Math.SQRT2*Math.sqrt(u+1)-1;case"squarecircle":return 2*Math.sqrt(1-u**2)-1;case"circle":return c>.5?-Math.sqrt(1-((c-.5)*4-1)**2):Math.sqrt(1-(c*4-1)**2);case"wave":if(!f.interp){let a=n,h="cubic";Array.isArray(a)||(h=a.interpolation,a=a.points),f.interp=Y(h)(a,self._state.samples/(self._state.max*(a.length-1)*s))}for(let a=0;a<f.interp.length;a+=2)if(f.interp[a]>=c)return f.interp[a+1];return 0;default:throw new Error(`Unknown oscillator type: ${t}`)}},self.oscEase=(e,s,t,n,i="linear",f,r)=>(typeof i=="string"?J[i]:i)(self.osc(e,s,t,f),self.osc(e,s,n,r),e/self._state.max),self.transform=(e,s,t="hardtooth")=>{const n=++self._state.call;if(self._state.n<0)return 0;self._state.fs[n]||(self._state.fs[n]={f:0,last_x:0});const i=self._state.fs[n],f=e-i.last_x;i.last_x=e;const r=i.f+=self.clamp(s,0,22050)*f,o=e/self._state.max,c=r%1;switch(t){case"hardtooth":return c*2-1+.1*c*o*Math.sin(1e4*e);default:throw new Error(`Unknown transition type: ${t}`)}},F.forEach(e=>{self[e]=(s,t,...n)=>self.osc(s,t,e,...n)}),self.oscs=(e,s,t,n=.5)=>{let i=0;s=Array.isArray(s)?s:[s];for(let f=0;f<s.length;f++)i+=self.osc(e,s[f],t,n);return i/s.length},self.adsr=(e,s=.2,t=.1,n=.4,i=.3,f=.5,r=null)=>(r=r||self._state.max,e=e/r,e<0?0:e<=s?e/s:e<=s+t?1-(1-f)*(e-s)/t:e<=s+t+n?f:e<=s+t+n+i?f-(f-0)*(e-s-t-n)/i:0),self.iirFilterGen=e=>(s,t,n)=>{const i=++self._state.call;if(self._state.n<0)return 0;if(!self._state.fs[i]){const[a,h]=e(t,n);self._state.fs[i]={a,b:h,x:new Array(a.length).fill(0),y:new Array(h.length).fill(0)}}const f=self._state.fs[i],{a:r,b:o,x:c,y:p}=f;let u=0;for(let a=0;a<r.length;a++)u+=r[a]*c[a];for(let a=0;a<o.length;a++)u+=o[a]*p[a];for(let a=r.length-1;a>0;a--)c[a]=c[a-1];for(let a=o.length-1;a>0;a--)p[a]=p[a-1];return c[0]=s,p[0]=u,u},self.lowpass=self.iirFilterGen(e=>{const s=e*self._state.step,t=Math.exp(-z*s);return[[1-t],[t]]}),self.lowpass4=self.iirFilterGen(e=>{const t=e*self._state.step,n=Math.exp(-14.445*t);return[[Math.pow(1-n,4)],[4*n,-6*Math.pow(n,2),4*Math.pow(n,3),-Math.pow(n,4)]]}),self.highpass=self.iirFilterGen(e=>{const s=e*self._state.step,t=Math.exp(-z*s);return[[(1+t)/2,-(1+t)/2],[t]]}),self.bandpass=self.iirFilterGen((e,s)=>{const t=e*self._state.step,n=s*self._state.step,i=2*Math.cos(z*t),f=1-3*n,r=(1-f*i+f*f)/(2-i);return[[1-r,(r-f)*i,f*f-r],[f*i,-f*f]]}),self.bandstop=self.iirFilterGen((e,s)=>{const t=e*self._state.step,n=s*self._state.step,i=2*Math.cos(z*t),f=1-3*n,r=(1-f*i+f*f)/(2-i);return[[r,-r*i,r],[f*i,-f*f]]}),self.pulse=()=>{const e=++self._state.call;return self._state.n<0||self._state.fs[e]?0:(self._state.fs[e]=!0,1)},self.peak=(e,s,t=1)=>{const n=++self._state.call;return e>=s&&!self._state.fs[n]?(self._state.fs[n]=!0,t):0},self.band=(e,s,t,n=1)=>e>s&&e<t?n:0,self.normalize=(e,s=1/0,t=!0)=>{const n=++self._state.call,i=self._state.rfs[n];if(self._state.processing){if(self._state.processing===n){let f=0,r=0,o=1;for(let c=0;c<i.inputs.length;c++){const p=Math.abs(i.inputs[c]);p<1&&(r=r+(p-r)/o++),f<p&&p<s&&(f=p)}i.amax=f,i.aavg=r}return}if(i){if(i.amax)return e/((t?i.aavg:1)*i.amax)}else return self._state.rfs[n]={inputs:[e]},self._state.toPostProcess.push(n),0;return i.inputs[self._state.i]=e,0},self.fft=e=>{const s=++self._state.call,t=self._state.rfs[s];if(self._state.processing){if(self._state.processing===s){const n=$(t.inputs.length),i=new Float32Array(n),f=new Float32Array(n);for(let o=0;o<n;o++)i[o]=o<t.inputs.length?t.inputs[o]:0,f[o]=0;self._fft(i,f),t.outputs=[];const r=2/n;for(let o=0;o<t.inputs.length;o++){const c=~~(n/2*(o/t.inputs.length));t.outputs[o]=r*Math.sqrt(i[c]**2+f[c]**2)}}return}if(t){if(t.outputs)return t.outputs[self._state.i]}else return self._state.rfs[s]={inputs:[e]},self._state.toPostProcess.push(s),0;return t.inputs[self._state.i]=e,0},self.ifft=e=>{const s=++self._state.call,t=self._state.rfs[s];if(self._state.processing){if(self._state.processing===s){const n=$(t.inputs.length),i=new Float32Array(n),f=new Float32Array(n);for(let r=0;r<n;r++)i[r]=0,f[r]=r<t.inputs.length?t.inputs[r]:0;self._fft(i,f),t.outputs=[];for(let r=0;r<t.inputs.length;r++){const o=~~(n/2*(r/t.inputs.length));t.outputs[r]=f[o]}}return}if(t){if(t.outputs)return t.outputs[self._state.i]}else return self._state.rfs[s]={inputs:[e]},self._state.toPostProcess.push(s),0;return t.inputs[self._state.i]=e,0},self._fft=(e,s)=>{const t=e.length;if(t!==s.length)throw new Error("Mismatched lengths");const n=Math.log2(t);if(n!==~~n)throw new Error("Length is not a power of 2");const i=new Float32Array(t/2),f=new Float32Array(t/2);for(var r=0;r<t/2;r++)i[r]=Math.cos(z*r/t),f[r]=Math.sin(z*r/t);for(let o=0;o<t;o++){let c=0,p=o;for(let u=0;u<n;u++)c=c<<1|p&1,p>>>=1;c>o&&([e[o],e[c]]=[e[c],e[o]],[s[o],s[c]]=[s[c],s[o]])}for(let o=2;o<=t;o*=2){const c=o/2,p=t/o;for(let u=0;u<t;u+=o)for(let a=u,h=0;a<u+c;a++,h+=p){const M=e[a+c]*i[h]+s[a+c]*f[h],l=-e[a+c]*f[h]+s[a+c]*i[h];e[a+c]=e[a]-M,s[a+c]=s[a]-l,e[a]+=M,s[a]+=l}}return[e,s]},self.segment=(e,...s)=>{for(let t=0;t<s.length;t+=2)if(e<s[t])return s[t+1]},self.at=(e,s,t)=>s(t+e),self.__doc__=Object.fromEntries(Object.entries(st).map(([e,s])=>Object.entries(s).map(([t,n])=>[self[t],`${e}: ${n}`])).flat());const A={epsilon:1e-9,sampling:1500,subsampling:32,minBlockSize:10,precisionPass:8,precision:T/1024,extremumPass:32,straightness:1e-5,maxPoints:1e4,overflow:.1},W=(e,s,t,n,i)=>{var f,r;if(isNaN(s)||isNaN(t)||s<n[0][0]||s>n[0][1]||t<n[1][0]||t>n[1][1]){(f=e.out)!=null&&f.length||e.length>0&&e.push(s,t),e.out=[s,t];return}(r=e.out)!=null&&r.length&&(i==="linear-horizontal"?e.push(NaN,((e[e.length-1]||n[1][0])+e.out[1])/2):i==="linear"?e.push(((e[e.length-2]||n[0][0])+e.out[0])/2,NaN):e.push(NaN,NaN),e.push(...e.out),e.out.splice(0)),e.push(s,t)},hs=(e,s,t,n,i,f,r,o)=>{if(t==="linear"){const c=o*n+(1-o)*f,p=s[0](c);e(c,p)}else if(t==="linear-horizontal"){const c=o*i+(1-o)*r,p=s[0](c);e(p,c)}},Z=(e,s,t,n,i)=>{const[[f,r],[o,c]]=n,p=[],u=(l,w)=>W(p,l,w,n,t),a=(l,w,O,g,m)=>hs(u,s,t,l,w,O,g,m),h=(c-o)/(r-f);let M=0;for(let l=0;l+M<e.length;l+=4){const w=e[l],O=e[l+1],g=e[l+2+M],m=e[l+3+M],E=e[l+4+M],P=e[l+5+M];if(t==="linear"&&(isNaN(O)||isNaN(m)||isNaN(P))||t==="linear-horizontal"&&(isNaN(w)||isNaN(g)||isNaN(E))){l+=M,M=0,u(w,O),u(g,m);continue}const I=Math.atan2(m-O,h*(g-w)),y=Math.atan2(P-m,h*(E-g))-I,D=Math.abs(y),b=((E-w)/(r-f))**2+((P-O)/(c-o))**2;if(D*b<A.straightness){l-=4,M+=2;continue}if(M&&(l+=M,M=0),i){u(w,O),u(g,m);continue}const _=D>A.precision;u(w,O),_&&a(w,O,g,m,1/2),u(g,m),_&&a(g,m,E,P,1/2)}return p},us=(e,s,t,n)=>{for(let i=2;i<e.length-2;i+=2){let f=e[i-2],r=e[i-1],o=e[i],c=e[i+1],p=e[i+2],u=e[i+3];const a=n[t==="linear-horizontal"?0:1];if(t==="linear-horizontal"&&([f,r]=[r,f],[o,c]=[c,o],[p,u]=[u,p]),isNaN(c)||isNaN(u)||isNaN(r))continue;const h=Math.sign(c-r),M=Math.sign(u-c);if(h!==M){let l=f,w=o,O=p,g=c;for(let m=0;m<A.extremumPass;m++){const E=(l+w)/2,P=s[0](E),I=(w+O)/2,x=s[0](I);if(Math.sign(P-g)===h?(O=w,w=E,g=P):Math.sign(x-g)===h?(l=w,w=I,g=x):(l=E,O=I),l===O||g>a[1]||g<a[0])break}e[i]=w,e[i+1]=g,t==="linear-horizontal"&&([e[i],e[i+1]]=[e[i+1],e[i]])}}},ps=(e,s,t,n,i,f)=>{let r=[];const o=(i-n)/f;for(let c=0;c<f;c++){const p=n+c*o,[u,a]=R(e,s,p);W(r,u,a,t,s)}r=Z(r,e,s,t,!0),us(r,e,s,t);for(let c=0;c<A.precisionPass&&!(r.length>A.maxPoints);c++)r=Z(r,e,s,t);return r},gs=(e,s,t,n,i,f)=>{const r=i-n;n-=r*A.overflow/2,i+=r*A.overflow/2;const o=[];let c=[NaN,NaN],p=[NaN,NaN],u=R(e,s,n);const[a,h]=s==="linear-horizontal"?[1,0]:[0,1],M=t[s==="linear-horizontal"?0:1],l=t[s==="linear-horizontal"?1:0],w=(M[1]-M[0])/(l[1]-l[0]),O=(l[1]-l[0])*A.epsilon;let g=null,m={min:[],max:[]},E=!1;const P=(i-n)/f;for(let I=0;I<f;I++){const x=n+I*P;if(p=c,c=u,u=R(e,s,x+P),isNaN(c[h])||isNaN(u[h])){o.push(c[0],c[1]);continue}if(!isNaN(p[h])&&!g&&x<i-P){const N=Math.atan2(c[h]-p[h],w*(c[a]-p[a])),Q=Math.atan2(u[h]-c[h],w*(u[a]-c[a]))-N,q=Math.abs(Q),C=((u[a]-p[a])/(l[1]-l[0]))**2+((u[h]-p[h])/(M[1]-M[0]))**2;if(q*C<A.straightness){E=!0,c=p;continue}else E&&(E=!1,I--,u=c,c=p)}g||o.push(c[0],c[1]);let y=c[a],D=u[a],b=R(e,s,y+(D-y)/3),_=R(e,s,D-(D-y)/3);const ws=Math.sign(b[h]-c[h]),tt=Math.sign(_[h]-b[h]),B=Math.sign(u[h]-_[h]),d=B===-1?"max":"min";if(ws!==tt||tt!==B)for(let N=0;N<A.extremumPass;N++){if(b[h]>M[1]&&_[h]<M[0]||b[h]<M[0]&&_[h]>M[1]){const k=R(e,s,(y+D)/2),Q=Math.sign(k[h]-b[h]),q=Math.sign(_[h]-k[h]);if(Q!==q){b[h]>_[h]?(m.max.push(b),m.min.push(_)):(m.max.push(_),m.min.push(b)),g?b[h]>_[h]?(g.max.push(b[0],b[1]),g.min.push(_[0],_[1])):(g.max.push(_[0],_[1]),g.min.push(b[0],b[1])):(o.push(b[0],b[1]),s==="linear-horizontal"?o.push(NaN,(b[1]+_[1])/2):o.push((b[0]+_[0])/2,NaN),o.push(_[0],_[1]));break}}if(B===-1?b[h]<_[h]?y=b[a]:D=_[a]:b[h]>_[h]?y=b[a]:D=_[a],Math.abs(D-y)<O||N===A.extremumPass-1){B===-1&&b[h]>_[h]||B===1&&b[h]<_[h]?(m[d].push(b),g?g[d].push(b[0],b[1]):o.push(b[0],b[1])):(m[d].push(_),g?g[d].push(_[0],_[1]):o.push(_[0],_[1]));break}b=R(e,s,y+(D-y)/3),_=R(e,s,D-(D-y)/3)}else if(m.max.length+m.min.length>0){let N=null,k=0,Q=!1;for(let q=0;q<=A.subsampling;q++){let C=q===0?c:q===A.subsampling?u:R(e,s,((A.subsampling-q)*c[a]+q*u[a])/A.subsampling);if(N){const G=Math.sign(C[h]-N[h]);if(k&&G!==k){m[G===-1?"max":"min"].push(C),Q=!0;break}k=G}N=C}Q||(m.min.shift(),m.max.shift())}else m.min.shift(),m.max.shift();if(m.min.length>3&&m.min.shift(),m.max.length>3&&m.max.shift(),g){if(m.min.length<1&&m.max.length<1||I===f-1){if(g.min.length>2&&g.max.length>2){o.push(NaN,NaN);for(let N=0;N<g.min.length;N+=2)o.push(g.min[N],g.min[N+1]);s==="linear-horizontal"?(o.push(g.min[g.min.length-2],c[1]),o.push(g.max[g.max.length-2],c[1])):(o.push(c[0],g.min[g.min.length-1]),o.push(c[0],g.max[g.max.length-1]));for(let N=g.max.length-2;N>=0;N-=2)o.push(g.max[N],g.max[N+1]);o.push(NaN,NaN)}o.push(c[0],c[1]),g=null}}else if(m.min.length>=1&&m.max.length>=1){const N=m.min[m.min.length-1],k=m.max[m.max.length-1],Q=Math.min(N[a],k[a]);g={min:s==="linear-horizontal"?[N[h],Q]:[Q,N[h]],max:s==="linear-horizontal"?[k[h],Q]:[Q,k[h]]}}}return o.push(u[0],u[1]),o},Ms=(e,s,t,n,i,f)=>{const r=[],o=(i-n)/f;for(let c=0;c<f;c++){const p=n+c*o,[u,a]=R(e,s,p);r.push(u,a)}return r},ms=(e,s,t,n,i,f)=>{const r=$(f),o=[],c=new Float32Array(r),p=new Float32Array(r),u=(i-n)/r;for(let l=0;l<r;l++){const[,w]=R(e,s,n+l*u);c[l]=w,p[l]=0}self._fft(c,p);const a=2/r,h=r*u,M=Math.max(1,~~(r/t[0][2]));for(let l=0;l<r/2;l++){let w=l,O=0;for(;l-w<M;l++)O=Math.max(O,a*Math.sqrt(c[l]**2+p[l]**2));o.push(h*(w+l+1)/2,O)}return o},v=(e,s,t,n,i,f)=>{const r=$(f),o=[],c=new Float32Array(r),p=new Float32Array(r),u=(i-n)/r;for(let a=0;a<r;a++){const[,h]=R(e,s,n+a*u);c[a]=0,p[a]=h}self._fft(c,p);for(let a=0;a*u<i&&a<c.length;a++)o.push(a*u,c[a]);return o},R=(e,s,t)=>{if(self._state.call=0,self._state.n=t,self._state.i++,s==="parametric"){const n=e[0](t),i=e[1](t);return[n,i]}else if(s==="polar"){const n=e[0](t);return[n*Math.cos(t),n*Math.sin(t)]}else{if(s==="linear-horizontal")return[e[0](t),t];{const n=e[0](t);return[t,n]}}},L={};onmessage=({data:{index:e,region:s,affects:t,funs:n,type:i,min:f,max:r,samples:o,mode:c,rendering:p,interpolation:u,recs:a,job:h,uuid:M}})=>{let l="",w=[],O,g,m=[];try{if(i==="unknown")throw new Error(`Invalid function type ${n.join(", ")}`);if(c===null&&(c="line"),!U.includes(c))throw new Error(`Invalid mode: ${c}, must be one of ${U.join(", ")}`);if(typeof f=="string"&&(f=new Function("return "+f)()),typeof r=="string"&&(r=new Function("return "+r)()),typeof o=="string"&&(o=new Function("return "+o)()),isNaN(o)||o===0)throw new Error(`Invalid sample size ${o}`);p||(["linear","linear-horizontal"].includes(i)?p="auto":p="size");for(let I=0;I<t.length;I++){const[x,y]=t[I],D=new Function("","return "+y)();L[x]=self[x],self[x]=D}a&&Object.entries(a).forEach(([I,x])=>{x&&(self[`$rec${I}`]=y=>{const D=~~Math.round(y*x.sampleRate);return D>=0&&D<x.buffer.length?x.buffer[D]:0})}),self._state={call:0,i:-1,fs:[],rfs:[],min:f,max:r,samples:o,step:(r-f)/o,toPostProcess:[],processing:null};let E="";i==="sound"&&(E=`let f = t * ${o/(2*r*r)};`);const P=n.map(I=>new Function(ls[i],E+"return "+I));if(h==="check"){self._state.call=self._state.n=0;const I=P[0](Math.random()*(r-f)+f);if(i==="list"?!Array.isArray(I):typeof I!="number"){let x;throw typeof I=="number"?x=new Error(`Invalid list (${I})`):typeof I=="function"?x=new Error(self.__doc__[I]||"Function not supported"):typeof I>"u"?x=new Error(`${n[0]} is undefined`):x=new Error(`${typeof I} is not a number`),x}i==="sound"?p==="fft"?O=[[0,o/r/2,s[0][2]],[0,1,s[1][2]]]:O=[[0,r,s[0][2]],[-1,1,s[1][2]]]:O=[[-2,2,s[0][2]],[-2*s[1][2]/s[0][2],2*s[1][2]/s[0][2],s[1][2]]]}else if(h==="sound"){g=new Float32Array(o);let I=0;if(p==="ifft"){w=v(P,i,s,f,r,o);for(let x=1;x<w.length;x+=2)g[I++]=w[x]}else do{self._state.toPostProcess.length&&(self._state.processing=self._state.toPostProcess.shift(),R(P,i,0),self._state.processing=null,self._state.i=-1,self._state.fs=[],I=0);const x=(r-f)/o;for(let y=0;y<o;y++){const D=f+y*x;self._state.call=0,self._state.n=D,self._state.i++,g[I++]=P[0](D)}}while(self._state.toPostProcess.length)}else{do self._state.toPostProcess.length&&(self._state.processing=self._state.toPostProcess.shift(),R(P,i,0),self._state.processing=null,self._state.i=-1,self._state.fs=[]),i==="list"?(m=P[0]().map(([I,x])=>[I||0,x||0]),m.length>1&&(u==="linear"?w=m.flat():w=Y(u)(m,o/m.length)),m=m.flat()):p==="size"?w=Ms(P,i,s,f,r,o):p==="adaptative"?w=ps(P,i,s,f,r,o):p==="auto"?w=gs(P,i,s,f,r,o):p==="fft"?w=ms(P,i,s,f,r,o):p==="ifft"&&(w=v(P,i,s,f,r,o));while(self._state.toPostProcess.length);g=new Float32Array(w)}a&&Object.keys(a).forEach(I=>{delete self[`$rec${I}`]});for(let I=0;I<t.length;I++){const[x]=t[I];self[x]=L[x],delete L[x]}}catch(E){l=E}postMessage({index:e,values:g,type:i,mode:c,max:r,samples:o,rendering:p,interpolation:u,preferredRegion:O,notablePoints:m,err:l,uuid:M},g==null?void 0:g.buffer)}})();
